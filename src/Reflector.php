<?php

declare(strict_types=1);

/*
 * This file is part of the humbug/php-scoper package.
 *
 * Copyright (c) 2017 Théo FIDRY <theo.fidry@gmail.com>,
 *                    Pádraic Brady <padraic.brady@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Humbug\PhpScoper;

use Roave\BetterReflection\SourceLocator\SourceStubber\PhpStormStubsMap;
use function array_key_exists;

/**
 * TODO: check if the stubs map could be generated by jetbrains directly instead of being done in BetterReflection
 * since we use so little of it (and as a result makes more dependencies).
 *
 * @private
 */
final class Reflector
{
    private static $CONSTANTS;

    public function __construct()
    {
        if (null === self::$CONSTANTS) {
            self::$CONSTANTS = PhpStormStubsMap::CONSTANTS;
            self::$CONSTANTS['STDIN'] = true;
            self::$CONSTANTS['STDOUT'] = true;
            self::$CONSTANTS['STDERR'] = true;
        }
    }

    public function isClassInternal(string $name): bool
    {
        return array_key_exists($name, PhpStormStubsMap::CLASSES);
    }

    public function isFunctionInternal(string $name): bool
    {
        return array_key_exists($name, PhpStormStubsMap::FUNCTIONS);
    }

    public function isConstantInternal(string $name): bool
    {
        return array_key_exists($name, self::$CONSTANTS);
    }
}
